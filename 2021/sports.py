"""점심시간에 도둑이 들어, 일부 학생이 체육복을 도난당했습니다. 
다행히 여벌 체육복이 있는 학생이 이들에게 체육복을 빌려주려 합니다. 
학생들의 번호는 체격 순으로 매겨져 있어, 바로 앞번호의 학생이나 바로 뒷번호의 학생에게만 체육복을 빌려줄 수 있습니다. 
예를 들어, 4번 학생은 3번 학생이나 5번 학생에게만 체육복을 빌려줄 수 있습니다. 
체육복이 없으면 수업을 들을 수 없기 때문에 체육복을 적절히 빌려 최대한 많은 학생이 체육수업을 들어야 합니다.

전체 학생의 수 n, 체육복을 도난당한 학생들의 번호가 담긴 배열 lost, 
여벌의 체육복을 가져온 학생들의 번호가 담긴 배열 reserve가 매개변수로 주어질 때, 
체육수업을 들을 수 있는 학생의 최댓값을 return 하도록 solution 함수를 작성해주세요.

제한사항
전체 학생의 수는 2명 이상 30명 이하입니다.
체육복을 도난당한 학생의 수는 1명 이상 n명 이하이고 중복되는 번호는 없습니다.
여벌의 체육복을 가져온 학생의 수는 1명 이상 n명 이하이고 중복되는 번호는 없습니다.
여벌 체육복이 있는 학생만 다른 학생에게 체육복을 빌려줄 수 있습니다.
여벌 체육복을 가져온 학생이 체육복을 도난당했을 수 있습니다. 
이때 이 학생은 체육복을 하나만 도난당했다고 가정하며, 남은 체육복이 하나이기에 다른 학생에게는 체육복을 빌려줄 수 없습니다.
"""


def solution(n, lost, reserve):
    answer = 0
    student = [1]*n
    for l in lost:
        student[l-1] -= 1 
    for r in reserve:
        student[r-1] += 1 
    
    for i in range(0,n):
        if student[i] == 2:
            if i == 0:
                if student[i+1] == 0:
                    student[i+1] += 1
                    student[i] -= 1
            if i == n-1:
                if student[i-1] == 0:
                    student[i] -=  1
                    student[i-1] += 1
            else:
                if student[i-1] == 0:
                    student[i] -=  1
                    student[i-1] += 1
                elif student[i+1] == 0:
                    student[i+1] += 1
                    student[i] -= 1
    for k in student:
        if k:
            answer += 1
    return answer


"""
01) 
n-1 번째와 n+1번째에 체육복이 없다면, n-1번째에게 먼저 주는 것이 맞다. 
왜냐면 n+1번쨰는 n+2번째가 줄 수도  있지만, n번째는 n+3에게 줄 수 없기 때문 

n명일 때, 
-> 0번째가 1번만 보는 것과 n번째가 n-1번만 보는 것을 체크, 
나머지는 앞 -> 뒤를 보도록 체크하면 된다. 

02) 
웃기게도, lost에 들어있는 사람이 reserve에 들어있을 수도 있다. 
처음에 
for l in lost: 
    student[l-1] = 0 로 했었는데, 
이렇게하면 잃어버렸는데 reserve에 있을 때 2로 초기화시켰기 때문에 에러가 난다. 
lost와 reserve에 들어있으면 -1 +1이라  그냥 1이 맞다. 
-> lost와 reserve를 둘 다 체크해서 for loop 한 번으로도 가능하다. 

다른 사람은 더 잘 풀었다더라.. 
"""